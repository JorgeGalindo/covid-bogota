library(tidyverse)
setwd(here::here())
#1. Scrap and clean up a bit
individual_daily_df <- read.csv("https://datosabiertos.bogota.gov.co/dataset/44eacdb7-a535-45ed-be03-16dbbea6f6da/resource/b64ba3c4-9e41-41b8-b3fd-2da21d627558/download/osb_enftransm-covid-19.csv", sep =",", col.names=c("detect_date","city","localidad","age","sex","type","place","status"), fileEncoding="Windows-1252")
id <- rownames(individual_daily_df)
individual_daily_df <- cbind(id=id, individual_daily_df)
individual_daily_df <- individual_daily_df %>%
mutate(detect_date=as.Date(detect_date,format="%d/%m/%Y")) %>%
separate(localidad, sep = " - ", into = c("loc_code", "loc_name"))
##Translate
individual_daily_df <- individual_daily_df  %>%
mutate(place=str_replace_all(place, c("Casa"="Home","Hospital UCI"="ICU", "Fallecido"="Dead")),
status=str_replace_all(status, c("Leve"="Mild","Moderado"="Moderate", "Grave"="Critical", "GRAVE"="Critical","Fallecido"="Dead"))
)
#2. Produce basic tidy dataframe, with cumulative cases per day
basic_df <- individual_daily_df %>%
mutate(Deadorcase = if_else(status == "Dead", "deaths" , "cases")) %>%
select(detect_date, loc_name, Deadorcase) %>%
group_by(detect_date, loc_name, Deadorcase) %>%
count()  %>%
pivot_wider(names_from=Deadorcase, values_from=n) %>%
mutate(deaths = replace_na(deaths, 0)) %>%
mutate(cases = replace_na(cases, 0)) %>%
group_by(loc_name)  %>%
mutate(
cum_deaths = cumsum(deaths),
cum_cases = cumsum(cases)
) %>%
select(-deaths,-cases)
#Extracting, cleaning and producing a useful daily tracker of the health status of Bogot치's daily COVID infections
#Author: Jorge Galindo
rm(list = ls())
setwd(here::here())
library(tidyverse)
library(lubridate)
#1. Scrap and clean up a bit
individual_daily_df <- read.csv("https://datosabiertos.bogota.gov.co/dataset/44eacdb7-a535-45ed-be03-16dbbea6f6da/resource/b64ba3c4-9e41-41b8-b3fd-2da21d627558/download/osb_enftransm-covid-19.csv", sep =",", col.names=c("detect_date","city","localidad","age","sex","type","place","status"), fileEncoding="Windows-1252")
id <- rownames(individual_daily_df)
individual_daily_df <- cbind(id=id, individual_daily_df)
individual_daily_df <- individual_daily_df %>%
mutate(detect_date=as.Date(detect_date,format="%d/%m/%Y")) %>%
separate(localidad, sep = " - ", into = c("loc_code", "loc_name"))
##Translate
individual_daily_df <- individual_daily_df  %>%
mutate(place=str_replace_all(place, c("Casa"="Home","Hospital UCI"="ICU", "Fallecido"="Dead")),
status=str_replace_all(status, c("Leve"="Mild","Moderado"="Moderate", "Grave"="Critical", "GRAVE"="Critical","Fallecido"="Dead"))
)
#2. Produce a daily updated csv file storing the evolving status of all individual patients
#(necessary assumption: original table does not change the order of patients)
single_daily_df <- individual_daily_df %>%
select(id, place, status) %>%
mutate(status_date=today())
## Saving the output -- the append = TRUE part is crucial! Just edit the path.
write.table(single_daily_df, "data_output/cases_dailystatus.csv", sep = ",", append = TRUE, quote = FALSE,
col.names = TRUE, row.names = FALSE)
#-------# If you run the script once daily up to here, you will get your CSV with daily updates.
#-------# My advice: run it in the evening (Bogot치/EST time). You may also want to consider automating the process with CRON.
#Extracting, cleaning and producing a useful daily tracker of the occupancy levels in Bogot치's hospital system
#Note that...
#"general" means "general/standard hospitalization";
#"IMCU" stands for "Intermediate Care Unit"
#"ICU" stands for "Intensive Care Unit"
#Author: Jorge Galindo
rm(list = ls())
setwd(here::here())
library(tidyverse)
library(lubridate)
#1. Scrap and add ID
hosp_daily_public_df <- read.csv("http://saludata.saludcapital.gov.co/osb/datos_abiertos_osb/oferta-servicios/OSB_OfertaSrv-ocupacioncamas.csv", sep =";", skip = 6, col.names=c("cat", "public_general_neonatal","public_general_pediatric","public_general_adult","public_IMCU_neonatal","public_IMCU_pediatric","public_IMCU_adult","public_ICU_neonatal","public_ICU_pediatric","public_ICU_adult"), fileEncoding="Windows-1252")
id_publ <- rownames(hosp_daily_public_df)
hosp_daily_public_df <- cbind(id_publ=as.numeric(id_publ), hosp_daily_public_df)
hosp_daily_private_df <- read.csv("http://saludata.saludcapital.gov.co/osb/datos_abiertos_osb/oferta-servicios/OSB_OfertaSrv-ocupacioncamas.csv", sep =";", skip = 14, col.names=c("cat", "private_general_neonatal","private_general_pediatric","private_general_adult","private_IMCU_neonatal","private_IMCU_pediatric","private_IMCU_adult","private_ICU_neonatal","private_ICU_pediatric","private_ICU_adult"), fileEncoding="Windows-1252")
id_priv <- rownames(hosp_daily_private_df)
hosp_daily_private_df <- cbind(id_priv=as.numeric(id_priv), hosp_daily_private_df)
#2. The BIG cleanup
hosp_daily_public_all_longer_df <- hosp_daily_public_df %>%
filter(id_publ<3) %>%
select(-id_publ) %>%
filter(cat=="Camas habilitadas") %>%
pivot_longer(c("cat", "public_general_neonatal","public_general_pediatric","public_general_adult","public_IMCU_neonatal","public_IMCU_pediatric","public_IMCU_adult","public_ICU_neonatal","public_ICU_pediatric","public_ICU_adult"), names_to = "bedtype", values_to="total") %>%
filter(bedtype!="cat")
hosp_daily_public_occupied_longer_df <- hosp_daily_public_df %>%
filter(id_publ<3) %>%
select(-id_publ) %>%
filter(cat=="Camas ocupadas") %>%
pivot_longer(c("cat", "public_general_neonatal","public_general_pediatric","public_general_adult","public_IMCU_neonatal","public_IMCU_pediatric","public_IMCU_adult","public_ICU_neonatal","public_ICU_pediatric","public_ICU_adult"), names_to = "bedtype", values_to="occupied") %>%
filter(bedtype!="cat")
hosp_daily_public_df <- left_join(hosp_daily_public_all_longer_df,hosp_daily_public_occupied_longer_df)
hosp_daily_private_all_longer_df <- hosp_daily_private_df %>%
filter(id_priv<3) %>%
select(-id_priv) %>%
filter(cat=="Camas habilitadas") %>%
pivot_longer(c("cat", "private_general_neonatal","private_general_pediatric","private_general_adult","private_IMCU_neonatal","private_IMCU_pediatric","private_IMCU_adult","private_ICU_neonatal","private_ICU_pediatric","private_ICU_adult"), names_to = "bedtype", values_to="total") %>%
filter(bedtype!="cat")
hosp_daily_private_occupied_longer_df <- hosp_daily_private_df %>%
filter(id_priv<3) %>%
select(-id_priv) %>%
filter(cat=="Camas ocupadas") %>%
pivot_longer(c("cat", "private_general_neonatal","private_general_pediatric","private_general_adult","private_IMCU_neonatal","private_IMCU_pediatric","private_IMCU_adult","private_ICU_neonatal","private_ICU_pediatric","private_ICU_adult"), names_to = "bedtype", values_to="occupied") %>%
filter(bedtype!="cat")
#3. Joining the data, tagging the date and creating clear categories
hosp_daily_private_df <- left_join(hosp_daily_private_all_longer_df,hosp_daily_private_occupied_longer_df)
hosp_daily_df <- rbind(hosp_daily_private_df, hosp_daily_public_df)
hosp_daily_df <- hosp_daily_df %>%
separate(bedtype, sep = "_", into = c("ownership","care","population")) %>%
mutate(
total=as.character(total),
occupied=as.character(occupied)
) %>%
mutate(
total=gsub("[.]","", total),
occupied=gsub("[.]","", occupied)
) %>%
mutate(status_date=today()-1, #note that there is a one-day lag on reporting
total=as.numeric(total),
occupied=as.numeric(occupied)
)
## Saving the output -- the append = TRUE part is crICUal! Just change the path if you wish.
write.table(hosp_daily_df, "data_output/hosp_dailystatus.csv", sep = ",", append = TRUE, quote = FALSE,
col.names = TRUE, row.names = FALSE, fileEncoding = "UTF-8")
#Extracting, cleaning and producing a useful daily tracker of the occupancy levels in Bogot치's hospital system
#Note that...
#"general" means "general/standard hospitalization";
#"IMCU" stands for "Intermediate Care Unit"
#"ICU" stands for "Intensive Care Unit"
#Author: Jorge Galindo
rm(list = ls())
setwd(here::here())
library(tidyverse)
library(lubridate)
#1. Scrap and add ID
hosp_daily_public_df <- read.csv("http://saludata.saludcapital.gov.co/osb/datos_abiertos_osb/oferta-servicios/OSB_OfertaSrv-ocupacioncamas.csv", sep =";", skip = 6, col.names=c("cat", "public_general_neonatal","public_general_pediatric","public_general_adult","public_IMCU_neonatal","public_IMCU_pediatric","public_IMCU_adult","public_ICU_neonatal","public_ICU_pediatric","public_ICU_adult"), fileEncoding="Windows-1252")
id_publ <- rownames(hosp_daily_public_df)
hosp_daily_public_df <- cbind(id_publ=as.numeric(id_publ), hosp_daily_public_df)
hosp_daily_private_df <- read.csv("http://saludata.saludcapital.gov.co/osb/datos_abiertos_osb/oferta-servicios/OSB_OfertaSrv-ocupacioncamas.csv", sep =";", skip = 14, col.names=c("cat", "private_general_neonatal","private_general_pediatric","private_general_adult","private_IMCU_neonatal","private_IMCU_pediatric","private_IMCU_adult","private_ICU_neonatal","private_ICU_pediatric","private_ICU_adult"), fileEncoding="Windows-1252")
id_priv <- rownames(hosp_daily_private_df)
hosp_daily_private_df <- cbind(id_priv=as.numeric(id_priv), hosp_daily_private_df)
#2. The BIG cleanup
hosp_daily_public_all_longer_df <- hosp_daily_public_df %>%
filter(id_publ<3) %>%
select(-id_publ) %>%
filter(cat=="Camas habilitadas") %>%
pivot_longer(c("cat", "public_general_neonatal","public_general_pediatric","public_general_adult","public_IMCU_neonatal","public_IMCU_pediatric","public_IMCU_adult","public_ICU_neonatal","public_ICU_pediatric","public_ICU_adult"), names_to = "bedtype", values_to="total") %>%
filter(bedtype!="cat")
hosp_daily_public_occupied_longer_df <- hosp_daily_public_df %>%
filter(id_publ<3) %>%
select(-id_publ) %>%
filter(cat=="Camas ocupadas") %>%
pivot_longer(c("cat", "public_general_neonatal","public_general_pediatric","public_general_adult","public_IMCU_neonatal","public_IMCU_pediatric","public_IMCU_adult","public_ICU_neonatal","public_ICU_pediatric","public_ICU_adult"), names_to = "bedtype", values_to="occupied") %>%
filter(bedtype!="cat")
hosp_daily_public_df <- left_join(hosp_daily_public_all_longer_df,hosp_daily_public_occupied_longer_df)
hosp_daily_private_all_longer_df <- hosp_daily_private_df %>%
filter(id_priv<3) %>%
select(-id_priv) %>%
filter(cat=="Camas habilitadas") %>%
pivot_longer(c("cat", "private_general_neonatal","private_general_pediatric","private_general_adult","private_IMCU_neonatal","private_IMCU_pediatric","private_IMCU_adult","private_ICU_neonatal","private_ICU_pediatric","private_ICU_adult"), names_to = "bedtype", values_to="total") %>%
filter(bedtype!="cat")
hosp_daily_private_occupied_longer_df <- hosp_daily_private_df %>%
filter(id_priv<3) %>%
select(-id_priv) %>%
filter(cat=="Camas ocupadas") %>%
pivot_longer(c("cat", "private_general_neonatal","private_general_pediatric","private_general_adult","private_IMCU_neonatal","private_IMCU_pediatric","private_IMCU_adult","private_ICU_neonatal","private_ICU_pediatric","private_ICU_adult"), names_to = "bedtype", values_to="occupied") %>%
filter(bedtype!="cat")
#3. Joining the data, tagging the date and creating clear categories
hosp_daily_private_df <- left_join(hosp_daily_private_all_longer_df,hosp_daily_private_occupied_longer_df)
hosp_daily_df <- rbind(hosp_daily_private_df, hosp_daily_public_df)
hosp_daily_df <- hosp_daily_df %>%
separate(bedtype, sep = "_", into = c("ownership","care","population")) %>%
mutate(
total=as.character(total),
occupied=as.character(occupied)
) %>%
mutate(
total=gsub("[.]","", total),
occupied=gsub("[.]","", occupied)
) %>%
mutate(status_date=today()-1, #note that there is a one-day lag on reporting
total=as.numeric(total),
occupied=as.numeric(occupied)
)
## Saving the output -- the append = TRUE part is crICUal! Just change the path if you wish.
write.table(hosp_daily_df, "data_output/hosp_dailystatus.csv", sep = ",", append = TRUE, quote = FALSE,
col.names = TRUE, row.names = FALSE, fileEncoding = "UTF-8")
#Extracting, cleaning and producing a useful daily tracker of the health status of Bogot치's daily COVID infections
#Author: Jorge Galindo
rm(list = ls())
setwd(here::here())
library(tidyverse)
library(lubridate)
#1. Scrap and clean up a bit
individual_daily_df <- read.csv("https://datosabiertos.bogota.gov.co/dataset/44eacdb7-a535-45ed-be03-16dbbea6f6da/resource/b64ba3c4-9e41-41b8-b3fd-2da21d627558/download/osb_enftransm-covid-19.csv", sep =",", col.names=c("detect_date","city","localidad","age","sex","type","place","status"), fileEncoding="Windows-1252")
id <- rownames(individual_daily_df)
individual_daily_df <- cbind(id=id, individual_daily_df)
individual_daily_df <- individual_daily_df %>%
mutate(detect_date=as.Date(detect_date,format="%d/%m/%Y")) %>%
separate(localidad, sep = " - ", into = c("loc_code", "loc_name"))
##Translate
individual_daily_df <- individual_daily_df  %>%
mutate(place=str_replace_all(place, c("Casa"="Home","Hospital UCI"="ICU", "Fallecido"="Dead")),
status=str_replace_all(status, c("Leve"="Mild","Moderado"="Moderate", "Grave"="Critical", "GRAVE"="Critical","Fallecido"="Dead"))
)
#2. Produce a daily updated csv file storing the evolving status of all individual patients
#(necessary assumption: original table does not change the order of patients)
single_daily_df <- individual_daily_df %>%
select(id, place, status) %>%
mutate(status_date=today())
## Saving the output -- the append = TRUE part is crucial! Just edit the path.
write.table(single_daily_df, "data_output/cases_dailystatus.csv", sep = ",", append = TRUE, quote = FALSE,
col.names = TRUE, row.names = FALSE)
#-------# If you run the script once daily up to here, you will get your CSV with daily updates.
#-------# My advice: run it in the evening (Bogot치/EST time). You may also want to consider automating the process with CRON.
#Extracting, cleaning and producing a useful daily tracker of the health status of Bogot치's daily COVID infections
#Author: Jorge Galindo
rm(list = ls())
setwd(here::here())
library(tidyverse)
library(lubridate)
#1. Scrap and clean up a bit
individual_daily_df <- read.csv("https://datosabiertos.bogota.gov.co/dataset/44eacdb7-a535-45ed-be03-16dbbea6f6da/resource/b64ba3c4-9e41-41b8-b3fd-2da21d627558/download/osb_enftransm-covid-19.csv", sep =",", col.names=c("detect_date","city","localidad","age","sex","type","place","status"), fileEncoding="Windows-1252")
id <- rownames(individual_daily_df)
individual_daily_df <- cbind(id=id, individual_daily_df)
individual_daily_df <- individual_daily_df %>%
mutate(detect_date=as.Date(detect_date,format="%d/%m/%Y")) %>%
separate(localidad, sep = " - ", into = c("loc_code", "loc_name"))
##Translate
individual_daily_df <- individual_daily_df  %>%
mutate(place=str_replace_all(place, c("Casa"="Home","Hospital UCI"="ICU", "Fallecido"="Dead")),
status=str_replace_all(status, c("Leve"="Mild","Moderado"="Moderate", "Grave"="Critical", "GRAVE"="Critical","Fallecido"="Dead"))
)
#2. Produce a daily updated csv file storing the evolving status of all individual patients
#(necessary assumption: original table does not change the order of patients)
single_daily_df <- individual_daily_df %>%
select(id, place, status) %>%
mutate(status_date=today())
## Saving the output -- the append = TRUE part is crucial! Just edit the path.
write.table(single_daily_df, "data_output/cases_dailystatus.csv", sep = ",", append = TRUE, quote = FALSE,
col.names = TRUE, row.names = FALSE)
#-------# If you run the script once daily up to here, you will get your CSV with daily updates.
#-------# My advice: run it in the evening (Bogot치/EST time). You may also want to consider automating the process with CRON.
#Extracting, cleaning and producing a useful daily tracker of the occupancy levels in Bogot치's hospital system
#Note that...
#"general" means "general/standard hospitalization";
#"IMCU" stands for "Intermediate Care Unit"
#"ICU" stands for "Intensive Care Unit"
#Author: Jorge Galindo
rm(list = ls())
setwd(here::here())
library(tidyverse)
library(lubridate)
#1. Scrap and add ID
hosp_daily_public_df <- read.csv("http://saludata.saludcapital.gov.co/osb/datos_abiertos_osb/oferta-servicios/OSB_OfertaSrv-ocupacioncamas.csv", sep =";", skip = 6, col.names=c("cat", "public_general_neonatal","public_general_pediatric","public_general_adult","public_IMCU_neonatal","public_IMCU_pediatric","public_IMCU_adult","public_ICU_neonatal","public_ICU_pediatric","public_ICU_adult"), fileEncoding="Windows-1252")
id_publ <- rownames(hosp_daily_public_df)
hosp_daily_public_df <- cbind(id_publ=as.numeric(id_publ), hosp_daily_public_df)
hosp_daily_private_df <- read.csv("http://saludata.saludcapital.gov.co/osb/datos_abiertos_osb/oferta-servicios/OSB_OfertaSrv-ocupacioncamas.csv", sep =";", skip = 14, col.names=c("cat", "private_general_neonatal","private_general_pediatric","private_general_adult","private_IMCU_neonatal","private_IMCU_pediatric","private_IMCU_adult","private_ICU_neonatal","private_ICU_pediatric","private_ICU_adult"), fileEncoding="Windows-1252")
id_priv <- rownames(hosp_daily_private_df)
hosp_daily_private_df <- cbind(id_priv=as.numeric(id_priv), hosp_daily_private_df)
#2. The BIG cleanup
hosp_daily_public_all_longer_df <- hosp_daily_public_df %>%
filter(id_publ<3) %>%
select(-id_publ) %>%
filter(cat=="Camas habilitadas") %>%
pivot_longer(c("cat", "public_general_neonatal","public_general_pediatric","public_general_adult","public_IMCU_neonatal","public_IMCU_pediatric","public_IMCU_adult","public_ICU_neonatal","public_ICU_pediatric","public_ICU_adult"), names_to = "bedtype", values_to="total") %>%
filter(bedtype!="cat")
hosp_daily_public_occupied_longer_df <- hosp_daily_public_df %>%
filter(id_publ<3) %>%
select(-id_publ) %>%
filter(cat=="Camas ocupadas") %>%
pivot_longer(c("cat", "public_general_neonatal","public_general_pediatric","public_general_adult","public_IMCU_neonatal","public_IMCU_pediatric","public_IMCU_adult","public_ICU_neonatal","public_ICU_pediatric","public_ICU_adult"), names_to = "bedtype", values_to="occupied") %>%
filter(bedtype!="cat")
hosp_daily_public_df <- left_join(hosp_daily_public_all_longer_df,hosp_daily_public_occupied_longer_df)
hosp_daily_private_all_longer_df <- hosp_daily_private_df %>%
filter(id_priv<3) %>%
select(-id_priv) %>%
filter(cat=="Camas habilitadas") %>%
pivot_longer(c("cat", "private_general_neonatal","private_general_pediatric","private_general_adult","private_IMCU_neonatal","private_IMCU_pediatric","private_IMCU_adult","private_ICU_neonatal","private_ICU_pediatric","private_ICU_adult"), names_to = "bedtype", values_to="total") %>%
filter(bedtype!="cat")
hosp_daily_private_occupied_longer_df <- hosp_daily_private_df %>%
filter(id_priv<3) %>%
select(-id_priv) %>%
filter(cat=="Camas ocupadas") %>%
pivot_longer(c("cat", "private_general_neonatal","private_general_pediatric","private_general_adult","private_IMCU_neonatal","private_IMCU_pediatric","private_IMCU_adult","private_ICU_neonatal","private_ICU_pediatric","private_ICU_adult"), names_to = "bedtype", values_to="occupied") %>%
filter(bedtype!="cat")
#3. Joining the data, tagging the date and creating clear categories
hosp_daily_private_df <- left_join(hosp_daily_private_all_longer_df,hosp_daily_private_occupied_longer_df)
hosp_daily_df <- rbind(hosp_daily_private_df, hosp_daily_public_df)
hosp_daily_df <- hosp_daily_df %>%
separate(bedtype, sep = "_", into = c("ownership","care","population")) %>%
mutate(
total=as.character(total),
occupied=as.character(occupied)
) %>%
mutate(
total=gsub("[.]","", total),
occupied=gsub("[.]","", occupied)
) %>%
mutate(status_date=today()-1, #note that there is a one-day lag on reporting
total=as.numeric(total),
occupied=as.numeric(occupied)
)
## Saving the output -- the append = TRUE part is crICUal! Just change the path if you wish.
write.table(hosp_daily_df, "data_output/hosp_dailystatus.csv", sep = ",", append = TRUE, quote = FALSE,
col.names = TRUE, row.names = FALSE, fileEncoding = "UTF-8")
#Extracting, cleaning and producing a useful daily tracker of the occupancy levels in Bogot치's hospital system
#Note that...
#"general" means "general/standard hospitalization";
#"IMCU" stands for "Intermediate Care Unit"
#"ICU" stands for "Intensive Care Unit"
#Author: Jorge Galindo
rm(list = ls())
setwd(here::here())
library(tidyverse)
library(lubridate)
#1. Scrap and add ID
hosp_daily_public_df <- read.csv("http://saludata.saludcapital.gov.co/osb/datos_abiertos_osb/oferta-servicios/OSB_OfertaSrv-ocupacioncamas.csv", sep =";", skip = 6, col.names=c("cat", "public_general_neonatal","public_general_pediatric","public_general_adult","public_IMCU_neonatal","public_IMCU_pediatric","public_IMCU_adult","public_ICU_neonatal","public_ICU_pediatric","public_ICU_adult"), fileEncoding="Windows-1252")
id_publ <- rownames(hosp_daily_public_df)
hosp_daily_public_df <- cbind(id_publ=as.numeric(id_publ), hosp_daily_public_df)
hosp_daily_private_df <- read.csv("http://saludata.saludcapital.gov.co/osb/datos_abiertos_osb/oferta-servicios/OSB_OfertaSrv-ocupacioncamas.csv", sep =";", skip = 14, col.names=c("cat", "private_general_neonatal","private_general_pediatric","private_general_adult","private_IMCU_neonatal","private_IMCU_pediatric","private_IMCU_adult","private_ICU_neonatal","private_ICU_pediatric","private_ICU_adult"), fileEncoding="Windows-1252")
id_priv <- rownames(hosp_daily_private_df)
hosp_daily_private_df <- cbind(id_priv=as.numeric(id_priv), hosp_daily_private_df)
#2. The BIG cleanup
hosp_daily_public_all_longer_df <- hosp_daily_public_df %>%
filter(id_publ<3) %>%
select(-id_publ) %>%
filter(cat=="Camas habilitadas") %>%
pivot_longer(c("cat", "public_general_neonatal","public_general_pediatric","public_general_adult","public_IMCU_neonatal","public_IMCU_pediatric","public_IMCU_adult","public_ICU_neonatal","public_ICU_pediatric","public_ICU_adult"), names_to = "bedtype", values_to="total") %>%
filter(bedtype!="cat")
hosp_daily_public_occupied_longer_df <- hosp_daily_public_df %>%
filter(id_publ<3) %>%
select(-id_publ) %>%
filter(cat=="Camas ocupadas") %>%
pivot_longer(c("cat", "public_general_neonatal","public_general_pediatric","public_general_adult","public_IMCU_neonatal","public_IMCU_pediatric","public_IMCU_adult","public_ICU_neonatal","public_ICU_pediatric","public_ICU_adult"), names_to = "bedtype", values_to="occupied") %>%
filter(bedtype!="cat")
hosp_daily_public_df <- left_join(hosp_daily_public_all_longer_df,hosp_daily_public_occupied_longer_df)
hosp_daily_private_all_longer_df <- hosp_daily_private_df %>%
filter(id_priv<3) %>%
select(-id_priv) %>%
filter(cat=="Camas habilitadas") %>%
pivot_longer(c("cat", "private_general_neonatal","private_general_pediatric","private_general_adult","private_IMCU_neonatal","private_IMCU_pediatric","private_IMCU_adult","private_ICU_neonatal","private_ICU_pediatric","private_ICU_adult"), names_to = "bedtype", values_to="total") %>%
filter(bedtype!="cat")
hosp_daily_private_occupied_longer_df <- hosp_daily_private_df %>%
filter(id_priv<3) %>%
select(-id_priv) %>%
filter(cat=="Camas ocupadas") %>%
pivot_longer(c("cat", "private_general_neonatal","private_general_pediatric","private_general_adult","private_IMCU_neonatal","private_IMCU_pediatric","private_IMCU_adult","private_ICU_neonatal","private_ICU_pediatric","private_ICU_adult"), names_to = "bedtype", values_to="occupied") %>%
filter(bedtype!="cat")
#3. Joining the data, tagging the date and creating clear categories
hosp_daily_private_df <- left_join(hosp_daily_private_all_longer_df,hosp_daily_private_occupied_longer_df)
hosp_daily_df <- rbind(hosp_daily_private_df, hosp_daily_public_df)
hosp_daily_df <- hosp_daily_df %>%
separate(bedtype, sep = "_", into = c("ownership","care","population")) %>%
mutate(
total=as.character(total),
occupied=as.character(occupied)
) %>%
mutate(
total=gsub("[.]","", total),
occupied=gsub("[.]","", occupied)
) %>%
mutate(status_date=today()-2, #note that there is a one-day lag on reporting
total=as.numeric(total),
occupied=as.numeric(occupied)
)
## Saving the output -- the append = TRUE part is crICUal! Just change the path if you wish.
write.table(hosp_daily_df, "data_output/hosp_dailystatus.csv", sep = ",", append = TRUE, quote = FALSE,
col.names = TRUE, row.names = FALSE, fileEncoding = "UTF-8")
#Extracting, cleaning and producing a useful daily tracker of the health status of Bogot치's daily COVID infections
#Author: Jorge Galindo
rm(list = ls())
setwd(here::here())
library(tidyverse)
library(lubridate)
#1. Scrap and clean up a bit
individual_daily_df <- read.csv("https://datosabiertos.bogota.gov.co/dataset/44eacdb7-a535-45ed-be03-16dbbea6f6da/resource/b64ba3c4-9e41-41b8-b3fd-2da21d627558/download/osb_enftransm-covid-19.csv", sep =",", col.names=c("detect_date","city","localidad","age","sex","type","place","status"), fileEncoding="Windows-1252")
id <- rownames(individual_daily_df)
individual_daily_df <- cbind(id=id, individual_daily_df)
individual_daily_df <- individual_daily_df %>%
mutate(detect_date=as.Date(detect_date,format="%d/%m/%Y")) %>%
separate(localidad, sep = " - ", into = c("loc_code", "loc_name"))
##Translate
individual_daily_df <- individual_daily_df  %>%
mutate(place=str_replace_all(place, c("Casa"="Home","Hospital UCI"="ICU", "Fallecido"="Dead")),
status=str_replace_all(status, c("Leve"="Mild","Moderado"="Moderate", "Grave"="Critical", "GRAVE"="Critical","Fallecido"="Dead"))
)
#2. Produce a daily updated csv file storing the evolving status of all individual patients
#(necessary assumption: original table does not change the order of patients)
single_daily_df <- individual_daily_df %>%
select(id, place, status) %>%
mutate(status_date=today()-1)
## Saving the output -- the append = TRUE part is crucial! Just edit the path.
write.table(single_daily_df, "data_output/cases_dailystatus.csv", sep = ",", append = TRUE, quote = FALSE,
col.names = TRUE, row.names = FALSE)
#-------# If you run the script once daily up to here, you will get your CSV with daily updates.
#-------# My advice: run it in the evening (Bogot치/EST time). You may also want to consider automating the process with CRON.
#Extracting, cleaning and producing a useful daily tracker of the health status of Bogot치's daily COVID infections
#Author: Jorge Galindo
rm(list = ls())
setwd(here::here())
library(tidyverse)
library(lubridate)
#1. Scrap and clean up a bit
individual_daily_df <- read.csv("https://datosabiertos.bogota.gov.co/dataset/44eacdb7-a535-45ed-be03-16dbbea6f6da/resource/b64ba3c4-9e41-41b8-b3fd-2da21d627558/download/osb_enftransm-covid-19.csv", sep =",", col.names=c("detect_date","city","localidad","age","sex","type","place","status"), fileEncoding="Windows-1252")
id <- rownames(individual_daily_df)
individual_daily_df <- cbind(id=id, individual_daily_df)
individual_daily_df <- individual_daily_df %>%
mutate(detect_date=as.Date(detect_date,format="%d/%m/%Y")) %>%
separate(localidad, sep = " - ", into = c("loc_code", "loc_name"))
##Translate
individual_daily_df <- individual_daily_df  %>%
mutate(place=str_replace_all(place, c("Casa"="Home","Hospital UCI"="ICU", "Fallecido"="Dead")),
status=str_replace_all(status, c("Leve"="Mild","Moderado"="Moderate", "Grave"="Critical", "GRAVE"="Critical","Fallecido"="Dead"))
)
#2. Produce a daily updated csv file storing the evolving status of all individual patients
#(necessary assumption: original table does not change the order of patients)
single_daily_df <- individual_daily_df %>%
select(id, place, status) %>%
mutate(status_date=today()-2)
## Saving the output -- the append = TRUE part is crucial! Just edit the path.
write.table(single_daily_df, "data_output/cases_dailystatus.csv", sep = ",", append = TRUE, quote = FALSE,
col.names = TRUE, row.names = FALSE)
#-------# If you run the script once daily up to here, you will get your CSV with daily updates.
#-------# My advice: run it in the evening (Bogot치/EST time). You may also want to consider automating the process with CRON.
#Extracting, cleaning and producing a useful daily tracker of the health status of Bogot치's daily COVID infections
#Author: Jorge Galindo
rm(list = ls())
setwd(here::here())
library(tidyverse)
library(lubridate)
#1. Scrap and clean up a bit
individual_daily_df <- read.csv("https://datosabiertos.bogota.gov.co/dataset/44eacdb7-a535-45ed-be03-16dbbea6f6da/resource/b64ba3c4-9e41-41b8-b3fd-2da21d627558/download/osb_enftransm-covid-19.csv", sep =",", col.names=c("detect_date","city","localidad","age","sex","type","place","status"), fileEncoding="Windows-1252")
id <- rownames(individual_daily_df)
individual_daily_df <- cbind(id=id, individual_daily_df)
individual_daily_df <- individual_daily_df %>%
mutate(detect_date=as.Date(detect_date,format="%d/%m/%Y")) %>%
separate(localidad, sep = " - ", into = c("loc_code", "loc_name"))
##Translate
individual_daily_df <- individual_daily_df  %>%
mutate(place=str_replace_all(place, c("Casa"="Home","Hospital UCI"="ICU", "Fallecido"="Dead")),
status=str_replace_all(status, c("Leve"="Mild","Moderado"="Moderate", "Severo"="Severe", "Grave"="Critical", "GRAVE"="Critical", "Cr칤tico"="Critical", "Fallecido"="Dead"))
)
#2. Produce a daily updated csv file storing the evolving status of all individual patients
#(necessary assumption: original table does not change the order of patients)
single_daily_df <- individual_daily_df %>%
select(id, place, status) %>%
mutate(status_date=today()-1)
## Saving the output -- the append = TRUE part is crucial! Just edit the path.
write.table(single_daily_df, "data_output/cases_dailystatus.csv", sep = ",", append = TRUE, quote = FALSE,
col.names = FALSE, row.names = FALSE)
#-------# If you run the script once daily up to here, you will get your CSV with daily updates.
#-------# My advice: run it in the evening (Bogot치/EST time). You may also want to consider automating the process with CRON.
#Extracting, cleaning and producing a useful daily tracker of the occupancy levels in Bogot치's hospital system
#Note that...
#"general" means "general/standard hospitalization";
#"IMCU" stands for "Intermediate Care Unit"
#"ICU" stands for "Intensive Care Unit"
#Author: Jorge Galindo
rm(list = ls())
setwd(here::here())
library(tidyverse)
library(lubridate)
#1. Scrap and add ID
hosp_daily_public_df <- read.csv("http://saludata.saludcapital.gov.co/osb/datos_abiertos_osb/oferta-servicios/OSB_OfertaSrv-ocupacioncamas.csv", sep =";", skip = 6, col.names=c("cat", "public_general_neonatal","public_general_pediatric","public_general_adult","public_IMCU_neonatal","public_IMCU_pediatric","public_IMCU_adult","public_ICU_neonatal","public_ICU_pediatric","public_ICU_adult"), fileEncoding="Windows-1252")
id_publ <- rownames(hosp_daily_public_df)
hosp_daily_public_df <- cbind(id_publ=as.numeric(id_publ), hosp_daily_public_df)
hosp_daily_private_df <- read.csv("http://saludata.saludcapital.gov.co/osb/datos_abiertos_osb/oferta-servicios/OSB_OfertaSrv-ocupacioncamas.csv", sep =";", skip = 14, col.names=c("cat", "private_general_neonatal","private_general_pediatric","private_general_adult","private_IMCU_neonatal","private_IMCU_pediatric","private_IMCU_adult","private_ICU_neonatal","private_ICU_pediatric","private_ICU_adult"), fileEncoding="Windows-1252")
id_priv <- rownames(hosp_daily_private_df)
hosp_daily_private_df <- cbind(id_priv=as.numeric(id_priv), hosp_daily_private_df)
#2. The BIG cleanup
hosp_daily_public_all_longer_df <- hosp_daily_public_df %>%
filter(id_publ<3) %>%
select(-id_publ) %>%
filter(cat=="Camas habilitadas") %>%
pivot_longer(c("cat", "public_general_neonatal","public_general_pediatric","public_general_adult","public_IMCU_neonatal","public_IMCU_pediatric","public_IMCU_adult","public_ICU_neonatal","public_ICU_pediatric","public_ICU_adult"), names_to = "bedtype", values_to="total") %>%
filter(bedtype!="cat")
hosp_daily_public_occupied_longer_df <- hosp_daily_public_df %>%
filter(id_publ<3) %>%
select(-id_publ) %>%
filter(cat=="Camas ocupadas") %>%
pivot_longer(c("cat", "public_general_neonatal","public_general_pediatric","public_general_adult","public_IMCU_neonatal","public_IMCU_pediatric","public_IMCU_adult","public_ICU_neonatal","public_ICU_pediatric","public_ICU_adult"), names_to = "bedtype", values_to="occupied") %>%
filter(bedtype!="cat")
hosp_daily_public_df <- left_join(hosp_daily_public_all_longer_df,hosp_daily_public_occupied_longer_df)
hosp_daily_private_all_longer_df <- hosp_daily_private_df %>%
filter(id_priv<3) %>%
select(-id_priv) %>%
filter(cat=="Camas habilitadas") %>%
pivot_longer(c("cat", "private_general_neonatal","private_general_pediatric","private_general_adult","private_IMCU_neonatal","private_IMCU_pediatric","private_IMCU_adult","private_ICU_neonatal","private_ICU_pediatric","private_ICU_adult"), names_to = "bedtype", values_to="total") %>%
filter(bedtype!="cat")
hosp_daily_private_occupied_longer_df <- hosp_daily_private_df %>%
filter(id_priv<3) %>%
select(-id_priv) %>%
filter(cat=="Camas ocupadas") %>%
pivot_longer(c("cat", "private_general_neonatal","private_general_pediatric","private_general_adult","private_IMCU_neonatal","private_IMCU_pediatric","private_IMCU_adult","private_ICU_neonatal","private_ICU_pediatric","private_ICU_adult"), names_to = "bedtype", values_to="occupied") %>%
filter(bedtype!="cat")
#3. Joining the data, tagging the date and creating clear categories
hosp_daily_private_df <- left_join(hosp_daily_private_all_longer_df,hosp_daily_private_occupied_longer_df)
hosp_daily_df <- rbind(hosp_daily_private_df, hosp_daily_public_df)
hosp_daily_df <- hosp_daily_df %>%
separate(bedtype, sep = "_", into = c("ownership","care","population")) %>%
mutate(
total=as.character(total),
occupied=as.character(occupied)
) %>%
mutate(
total=gsub("[.]","", total),
occupied=gsub("[.]","", occupied)
) %>%
mutate(status_date=today()-2, #note that there is a one-day lag on reporting
total=as.numeric(total),
occupied=as.numeric(occupied)
)
## Saving the output -- the append = TRUE part is crICUal! Just change the path if you wish.
write.table(hosp_daily_df, "data_output/hosp_dailystatus.csv", sep = ",", append = TRUE, quote = FALSE,
col.names = FALSE, row.names = FALSE, fileEncoding = "UTF-8")
