select(-id_priv) %>%
filter(cat=="Camas habilitadas") %>%
pivot_longer(c("cat", "private_general_neonatal","private_general_pediatric","private_general_adult","private_UMI_neonatal","private_UMI_pediatric","private_UMI_adult","private_ICU_neonatal","private_ICU_pediatric","private_ICU_adult"), names_to = "bedtype", values_to="total") %>%
filter(bedtype!="cat")
hosp_daily_private_occupied_longer_df <- hosp_daily_private_df %>%
filter(id_priv<3) %>%
select(-id_priv) %>%
filter(cat=="Camas ocupadas") %>%
pivot_longer(c("cat", "private_general_neonatal","private_general_pediatric","private_general_adult","private_UMI_neonatal","private_UMI_pediatric","private_UMI_adult","private_ICU_neonatal","private_ICU_pediatric","private_ICU_adult"), names_to = "bedtype", values_to="occupied") %>%
filter(bedtype!="cat")
#3. Joining the data, tagging the date and creating clear  categories
hosp_daily_private_df <- left_join(hosp_daily_private_all_longer_df,hosp_daily_private_occupied_longer_df)
hosp_daily_df <- rbind(hosp_daily_private_df, hosp_daily_public_df)
hosp_daily_df <- hosp_daily_df %>%
separate(bedtype, sep = "_", into = c("ownership","care","population")) %>%
mutate(
total=as.character(total),
occupied=as.character(occupied)
) %>%
mutate(
total=gsub("[.]","", total),
occupied=gsub("[.]","", occupied)
) %>%
mutate(status_date=today(),
total=as.numeric(total),
occupied=as.numeric(occupied)
)
## Saving the output -- the append = TRUE part is crICUal! Just change the path if you wish.
write.table(hosp_daily_df, "/Users/jorgegalindo/Desktop/projects/covid-Bogota/data_output/hosp_dailystatus.csv", sep = ",", append = TRUE, quote = FALSE,
col.names = TRUE, row.names = FALSE, fileEncoding = "UTF-8")
#Extracting, cleaning and prodICUng a useful daily tracker of the occupancy levels in Bogotá's hospital system
#Note that...
#"general" means "general/standard hospitalization";
#"IMCU" stands for "Intermediate Care Unit"
#"ICU" stands for "Intensive Care Unit"
#Author: Jorge Galindo
rm(list = ls())
library(tidyverse)
library(lubridate)
#1. Scrap and add ID
hosp_daily_public_df <- read.csv("http://saludata.saludcapital.gov.co/osb/datos_abiertos_osb/oferta-servicios/OSB_OfertaSrv-ocupacioncamas.csv", sep =";", skip = 6, col.names=c("cat", "public_general_neonatal","public_general_pediatric","public_general_adult","public_IMCU_neonatal","public_IMCU_pediatric","public_IMCU_adult","public_ICU_neonatal","public_ICU_pediatric","public_ICU_adult"), fileEncoding="Windows-1252")
id_publ <- rownames(hosp_daily_public_df)
hosp_daily_public_df <- cbind(id_publ=as.numeric(id_publ), hosp_daily_public_df)
hosp_daily_private_df <- read.csv("http://saludata.saludcapital.gov.co/osb/datos_abiertos_osb/oferta-servicios/OSB_OfertaSrv-ocupacioncamas.csv", sep =";", skip = 14, col.names=c("cat", "private_general_neonatal","private_general_pediatric","private_general_adult","private_IMCU_neonatal","private_IMCU_pediatric","private_IMCU_adult","private_ICU_neonatal","private_ICU_pediatric","private_ICU_adult"), fileEncoding="Windows-1252")
id_priv <- rownames(hosp_daily_private_df)
hosp_daily_private_df <- cbind(id_priv=as.numeric(id_priv), hosp_daily_private_df)
#2. The BIG cleanup
hosp_daily_public_all_longer_df <- hosp_daily_public_df %>%
filter(id_publ<3) %>%
select(-id_publ) %>%
filter(cat=="Camas habilitadas") %>%
pivot_longer(c("cat", "public_general_neonatal","public_general_pediatric","public_general_adult","public_IMCU_neonatal","public_IMCU_pediatric","public_IMCU_adult","public_ICU_neonatal","public_ICU_pediatric","public_ICU_adult"), names_to = "bedtype", values_to="total") %>%
filter(bedtype!="cat")
hosp_daily_public_occupied_longer_df <- hosp_daily_public_df %>%
filter(id_publ<3) %>%
select(-id_publ) %>%
filter(cat=="Camas ocupadas") %>%
pivot_longer(c("cat", "public_general_neonatal","public_general_pediatric","public_general_adult","public_IMCU_neonatal","public_IMCU_pediatric","public_IMCU_adult","public_ICU_neonatal","public_ICU_pediatric","public_ICU_adult"), names_to = "bedtype", values_to="occupied") %>%
filter(bedtype!="cat")
hosp_daily_public_df <- left_join(hosp_daily_public_all_longer_df,hosp_daily_public_occupied_longer_df)
hosp_daily_private_all_longer_df <- hosp_daily_private_df %>%
filter(id_priv<3) %>%
select(-id_priv) %>%
filter(cat=="Camas habilitadas") %>%
pivot_longer(c("cat", "private_general_neonatal","private_general_pediatric","private_general_adult","private_IMCU_neonatal","private_IMCU_pediatric","private_IMCU_adult","private_ICU_neonatal","private_ICU_pediatric","private_ICU_adult"), names_to = "bedtype", values_to="total") %>%
filter(bedtype!="cat")
hosp_daily_private_occupied_longer_df <- hosp_daily_private_df %>%
filter(id_priv<3) %>%
select(-id_priv) %>%
filter(cat=="Camas ocupadas") %>%
pivot_longer(c("cat", "private_general_neonatal","private_general_pediatric","private_general_adult","private_IMCU_neonatal","private_IMCU_pediatric","private_IMCU_adult","private_ICU_neonatal","private_ICU_pediatric","private_ICU_adult"), names_to = "bedtype", values_to="occupied") %>%
filter(bedtype!="cat")
#3. Joining the data, tagging the date and creating clear  categories
hosp_daily_private_df <- left_join(hosp_daily_private_all_longer_df,hosp_daily_private_occupied_longer_df)
hosp_daily_df <- rbind(hosp_daily_private_df, hosp_daily_public_df)
hosp_daily_df <- hosp_daily_df %>%
separate(bedtype, sep = "_", into = c("ownership","care","population")) %>%
mutate(
total=as.character(total),
occupied=as.character(occupied)
) %>%
mutate(
total=gsub("[.]","", total),
occupied=gsub("[.]","", occupied)
) %>%
mutate(status_date=today()-1,
total=as.numeric(total),
occupied=as.numeric(occupied)
)
## Saving the output -- the append = TRUE part is crICUal! Just change the path if you wish.
write.table(hosp_daily_df, "/Users/jorgegalindo/Desktop/projects/covid-Bogota/data_output/hosp_dailystatus.csv", sep = ",", append = TRUE, quote = FALSE,
col.names = TRUE, row.names = FALSE, fileEncoding = "UTF-8")
#Extracting, cleaning and prodICUng a useful daily tracker of the occupancy levels in Bogotá's hospital system
#Note that...
#"general" means "general/standard hospitalization";
#"IMCU" stands for "Intermediate Care Unit" by its Spanish acronym;
#"ICU" stands for "Intensive Care Unit" by its Spanish acronym
#Author: Jorge Galindo
rm(list = ls())
library(tidyverse)
library(lubridate)
#1. Scrap and add ID
hosp_daily_public_df <- read.csv("/Users/jorgegalindo/Desktop/OSB_OfertaSrv-ocupacioncamas.csv", sep =";", skip = 6, col.names=c("cat", "public_general_neonatal","public_general_pediatric","public_general_adult","public_IMCU_neonatal","public_IMCU_pediatric","public_IMCU_adult","public_ICU_neonatal","public_ICU_pediatric","public_ICU_adult"), fileEncoding="Windows-1252")
id_publ <- rownames(hosp_daily_public_df)
hosp_daily_public_df <- cbind(id_publ=as.numeric(id_publ), hosp_daily_public_df)
hosp_daily_private_df <- read.csv("/Users/jorgegalindo/Desktop/OSB_OfertaSrv-ocupacioncamas.csv", sep =";", skip = 14, col.names=c("cat", "private_general_neonatal","private_general_pediatric","private_general_adult","private_IMCU_neonatal","private_IMCU_pediatric","private_IMCU_adult","private_ICU_neonatal","private_ICU_pediatric","private_ICU_adult"), fileEncoding="Windows-1252")
id_priv <- rownames(hosp_daily_private_df)
hosp_daily_private_df <- cbind(id_priv=as.numeric(id_priv), hosp_daily_private_df)
#2. The BIG cleanup
hosp_daily_public_all_longer_df <- hosp_daily_public_df %>%
filter(id_publ<3) %>%
select(-id_publ) %>%
filter(cat=="Camas habilitadas") %>%
pivot_longer(c("cat", "public_general_neonatal","public_general_pediatric","public_general_adult","public_IMCU_neonatal","public_IMCU_pediatric","public_IMCU_adult","public_ICU_neonatal","public_ICU_pediatric","public_ICU_adult"), names_to = "bedtype", values_to="total") %>%
filter(bedtype!="cat")
hosp_daily_public_occupied_longer_df <- hosp_daily_public_df %>%
filter(id_publ<3) %>%
select(-id_publ) %>%
filter(cat=="Camas ocupadas") %>%
pivot_longer(c("cat", "public_general_neonatal","public_general_pediatric","public_general_adult","public_IMCU_neonatal","public_IMCU_pediatric","public_IMCU_adult","public_ICU_neonatal","public_ICU_pediatric","public_ICU_adult"), names_to = "bedtype", values_to="occupied") %>%
filter(bedtype!="cat")
hosp_daily_public_df <- left_join(hosp_daily_public_all_longer_df,hosp_daily_public_occupied_longer_df)
hosp_daily_private_all_longer_df <- hosp_daily_private_df %>%
filter(id_priv<3) %>%
select(-id_priv) %>%
filter(cat=="Camas habilitadas") %>%
pivot_longer(c("cat", "private_general_neonatal","private_general_pediatric","private_general_adult","private_IMCU_neonatal","private_IMCU_pediatric","private_IMCU_adult","private_ICU_neonatal","private_ICU_pediatric","private_ICU_adult"), names_to = "bedtype", values_to="total") %>%
filter(bedtype!="cat")
hosp_daily_private_occupied_longer_df <- hosp_daily_private_df %>%
filter(id_priv<3) %>%
select(-id_priv) %>%
filter(cat=="Camas ocupadas") %>%
pivot_longer(c("cat", "private_general_neonatal","private_general_pediatric","private_general_adult","private_IMCU_neonatal","private_IMCU_pediatric","private_IMCU_adult","private_ICU_neonatal","private_ICU_pediatric","private_ICU_adult"), names_to = "bedtype", values_to="occupied") %>%
filter(bedtype!="cat")
#3. Joining the data, tagging the date and creating clear  categories
hosp_daily_private_df <- left_join(hosp_daily_private_all_longer_df,hosp_daily_private_occupied_longer_df)
hosp_daily_df <- rbind(hosp_daily_private_df, hosp_daily_public_df)
hosp_daily_df <- hosp_daily_df %>%
separate(bedtype, sep = "_", into = c("ownership","care","population")) %>%
mutate(
total=as.character(total),
occupied=as.character(occupied)
) %>%
mutate(
total=gsub("[.]","", total),
occupied=gsub("[.]","", occupied)
) %>%
mutate(status_date=today()-3,
total=as.numeric(total),
occupied=as.numeric(occupied)
)
## Saving the output -- the append = TRUE part is crICUal! Just change the path if you wish.
write.table(hosp_daily_df, "/Users/jorgegalindo/Desktop/projects/covid-Bogota/data_output/hosp_dailystatus.csv", sep = ",", append = TRUE, quote = FALSE,
col.names = TRUE, row.names = FALSE, fileEncoding = "UTF-8")
#Extracting, cleaning and prodICUng a useful daily tracker of the occupancy levels in Bogotá's hospital system
#Note that...
#"general" means "general/standard hospitalization";
#"IMCU" stands for "Intermediate Care Unit"
#"ICU" stands for "Intensive Care Unit"
#Author: Jorge Galindo
rm(list = ls())
library(tidyverse)
library(lubridate)
#1. Scrap and add ID
hosp_daily_public_df <- read.csv("http://saludata.saludcapital.gov.co/osb/datos_abiertos_osb/oferta-servicios/OSB_OfertaSrv-ocupacioncamas.csv", sep =";", skip = 6, col.names=c("cat", "public_general_neonatal","public_general_pediatric","public_general_adult","public_IMCU_neonatal","public_IMCU_pediatric","public_IMCU_adult","public_ICU_neonatal","public_ICU_pediatric","public_ICU_adult"), fileEncoding="Windows-1252")
id_publ <- rownames(hosp_daily_public_df)
hosp_daily_public_df <- cbind(id_publ=as.numeric(id_publ), hosp_daily_public_df)
hosp_daily_private_df <- read.csv("http://saludata.saludcapital.gov.co/osb/datos_abiertos_osb/oferta-servicios/OSB_OfertaSrv-ocupacioncamas.csv", sep =";", skip = 14, col.names=c("cat", "private_general_neonatal","private_general_pediatric","private_general_adult","private_IMCU_neonatal","private_IMCU_pediatric","private_IMCU_adult","private_ICU_neonatal","private_ICU_pediatric","private_ICU_adult"), fileEncoding="Windows-1252")
id_priv <- rownames(hosp_daily_private_df)
hosp_daily_private_df <- cbind(id_priv=as.numeric(id_priv), hosp_daily_private_df)
#2. The BIG cleanup
hosp_daily_public_all_longer_df <- hosp_daily_public_df %>%
filter(id_publ<3) %>%
select(-id_publ) %>%
filter(cat=="Camas habilitadas") %>%
pivot_longer(c("cat", "public_general_neonatal","public_general_pediatric","public_general_adult","public_IMCU_neonatal","public_IMCU_pediatric","public_IMCU_adult","public_ICU_neonatal","public_ICU_pediatric","public_ICU_adult"), names_to = "bedtype", values_to="total") %>%
filter(bedtype!="cat")
hosp_daily_public_occupied_longer_df <- hosp_daily_public_df %>%
filter(id_publ<3) %>%
select(-id_publ) %>%
filter(cat=="Camas ocupadas") %>%
pivot_longer(c("cat", "public_general_neonatal","public_general_pediatric","public_general_adult","public_IMCU_neonatal","public_IMCU_pediatric","public_IMCU_adult","public_ICU_neonatal","public_ICU_pediatric","public_ICU_adult"), names_to = "bedtype", values_to="occupied") %>%
filter(bedtype!="cat")
hosp_daily_public_df <- left_join(hosp_daily_public_all_longer_df,hosp_daily_public_occupied_longer_df)
hosp_daily_private_all_longer_df <- hosp_daily_private_df %>%
filter(id_priv<3) %>%
select(-id_priv) %>%
filter(cat=="Camas habilitadas") %>%
pivot_longer(c("cat", "private_general_neonatal","private_general_pediatric","private_general_adult","private_IMCU_neonatal","private_IMCU_pediatric","private_IMCU_adult","private_ICU_neonatal","private_ICU_pediatric","private_ICU_adult"), names_to = "bedtype", values_to="total") %>%
filter(bedtype!="cat")
hosp_daily_private_occupied_longer_df <- hosp_daily_private_df %>%
filter(id_priv<3) %>%
select(-id_priv) %>%
filter(cat=="Camas ocupadas") %>%
pivot_longer(c("cat", "private_general_neonatal","private_general_pediatric","private_general_adult","private_IMCU_neonatal","private_IMCU_pediatric","private_IMCU_adult","private_ICU_neonatal","private_ICU_pediatric","private_ICU_adult"), names_to = "bedtype", values_to="occupied") %>%
filter(bedtype!="cat")
#3. Joining the data, tagging the date and creating clear  categories
hosp_daily_private_df <- left_join(hosp_daily_private_all_longer_df,hosp_daily_private_occupied_longer_df)
hosp_daily_df <- rbind(hosp_daily_private_df, hosp_daily_public_df)
hosp_daily_df <- hosp_daily_df %>%
separate(bedtype, sep = "_", into = c("ownership","care","population")) %>%
mutate(
total=as.character(total),
occupied=as.character(occupied)
) %>%
mutate(
total=gsub("[.]","", total),
occupied=gsub("[.]","", occupied)
) %>%
mutate(status_date=today()-2,
total=as.numeric(total),
occupied=as.numeric(occupied)
)
## Saving the output -- the append = TRUE part is crICUal! Just change the path if you wish.
write.table(hosp_daily_df, "/Users/jorgegalindo/Desktop/projects/covid-Bogota/data_output/hosp_dailystatus.csv", sep = ",", append = TRUE, quote = FALSE,
col.names = TRUE, row.names = FALSE, fileEncoding = "UTF-8")
#Extracting, cleaning and producing a useful daily tracker of the health status of Bogotá's daily COVID infections
#Author: Jorge Galindo
rm(list = ls())
library(tidyverse)
library(lubridate)
#1. Scrap and clean up a bit
individual_daily_df <- read.csv("/Users/jorgegalindo/Desktop/osb_enftransm-covid-19.csv", sep =";", col.names=c("detect_date","city","localidad","age","sex","type","Nation","place","status"), fileEncoding="Windows-1252")
id <- rownames(individual_daily_df)
individual_daily_df <- cbind(id=id, individual_daily_df)
individual_daily_df <- individual_daily_df %>%
mutate(detect_date=as.Date(detect_date,format="%d/%m/%Y")) %>%
separate(localidad, sep = " - ", into = c("loc_code", "loc_name"))
##Translate
individual_daily_df <- individual_daily_df  %>%
mutate(place=str_replace_all(place, c("Casa"="Home","Hospital UCI"="ICU", "Fallecido"="Dead")),
status=str_replace_all(status, c("Leve"="Mild","Moderado"="Moderate", "Grave"="Critical", "GRAVE"="Critical","Fallecido"="Dead"))
)
#2. Produce a daily updated csv file storing the evolving status of all individual patients
#(necessary assumption: original table does not change the order of patients)
single_daily_df <- individual_daily_df %>%
select(id, place, status) %>%
mutate(status_date=today()-2)
## Saving the output -- the append = TRUE part is crucial! Just edit the path.
write.table(single_daily_df, "/Users/jorgegalindo/Desktop/projects/covid-Bogota/data_output/cases_dailystatus.csv", sep = ",", append = TRUE, quote = FALSE,
col.names = TRUE, row.names = FALSE)
#-------# If you run the script once daily up to here, you will get your CSV with daily updates.
#-------# My advice: run it in the evening (Bogotá/EST time). You may also want to consider automating the process with CRON.
#Extracting, cleaning and producing a useful daily tracker of the health status of Bogotá's daily COVID infections
#Author: Jorge Galindo
rm(list = ls())
library(tidyverse)
library(lubridate)
#1. Scrap and clean up a bit
individual_daily_df <- read.csv("https://datosabiertos.bogota.gov.co/dataset/44eacdb7-a535-45ed-be03-16dbbea6f6da/resource/b64ba3c4-9e41-41b8-b3fd-2da21d627558/download/osb_enftransm-covid-19.csv", sep =",", col.names=c("detect_date","city","localidad","age","sex","type","place","status"), fileEncoding="Windows-1252")
id <- rownames(individual_daily_df)
individual_daily_df <- cbind(id=id, individual_daily_df)
individual_daily_df <- individual_daily_df %>%
mutate(detect_date=as.Date(detect_date,format="%d/%m/%Y")) %>%
separate(localidad, sep = " - ", into = c("loc_code", "loc_name"))
##Translate
individual_daily_df <- individual_daily_df  %>%
mutate(place=str_replace_all(place, c("Casa"="Home","Hospital UCI"="ICU", "Fallecido"="Dead")),
status=str_replace_all(status, c("Leve"="Mild","Moderado"="Moderate", "Grave"="Critical", "GRAVE"="Critical","Fallecido"="Dead"))
)
#2. Produce a daily updated csv file storing the evolving status of all individual patients
#(necessary assumption: original table does not change the order of patients)
single_daily_df <- individual_daily_df %>%
select(id, place, status) %>%
mutate(status_date=today()-1)
## Saving the output -- the append = TRUE part is crucial! Just edit the path.
write.table(single_daily_df, "/Users/jorgegalindo/Desktop/projects/covid-Bogota/data_output/cases_dailystatus.csv", sep = ",", append = TRUE, quote = FALSE,
col.names = TRUE, row.names = FALSE)
#-------# If you run the script once daily up to here, you will get your CSV with daily updates.
#-------# My advice: run it in the evening (Bogotá/EST time). You may also want to consider automating the process with CRON.
rm(list = ls())
library(tidyverse)
#Extract data -- downloaded from https://github.com/CSSEGISandData/COVID-19
initial_df_deaths <- read.csv("csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv", sep=",")
#Transform to long -- you should add manually the last date every day!
intermediate_df_deaths <- initial_df_deaths %>%
pivot_longer(c("X1.22.20","X1.23.20","X1.24.20","X1.25.20","X1.26.20","X1.27.20","X1.28.20","X1.29.20","X1.30.20","X1.31.20","X2.1.20","X2.2.20","X2.3.20","X2.4.20","X2.5.20","X2.6.20","X2.7.20","X2.8.20","X2.9.20","X2.10.20","X2.11.20","X2.12.20","X2.13.20","X2.14.20","X2.15.20","X2.16.20","X2.17.20","X2.18.20","X2.19.20","X2.20.20","X2.21.20","X2.22.20","X2.23.20","X2.24.20","X2.25.20","X2.26.20","X2.27.20","X2.28.20","X2.29.20","X3.1.20","X3.2.20","X3.3.20","X3.4.20","X3.5.20","X3.6.20","X3.7.20","X3.8.20","X3.9.20","X3.10.20","X3.11.20","X3.12.20","X3.13.20","X3.14.20","X3.15.20","X3.16.20","X3.17.20","X3.18.20","X3.19.20","X3.20.20","X3.21.20","X3.22.20","X3.23.20","X3.24.20","X3.25.20","X3.26.20","X3.27.20", "X3.28.20","X3.29.20","X3.30.20","X3.31.20","X4.1.20","X4.2.20","X4.3.20","X4.4.20","X4.5.20","X4.6.20","X4.7.20","X4.8.20","X4.9.20"), names_to = "date", values_to = "deaths")
#Separate for dates
intermediate_df_deaths <- intermediate_df_deaths %>%
separate(date, into = c("month_wrong", "day", "year"))
#Continent dummies
latam <- c("Argentina", "Bolivia", "Brazil", "Chile", "Colombia", "Costa Rica", "Cuba", "Dominican Republic", "Ecuador", "El Salvador", "Guatemala", "Honduras", "Mexico", "Nicaragua", "Panama", "Paraguay", "Peru", "Uruguay", "Venezuela")
eea <- c("Austria","Belgium", "Bulgaria", "Czechia", "Denmark", "Estonia", "Finland", "France", "Germany", "Greece", "Hungary", "Iceland", "Ireland", "Italy", "Latvia", "Liechtenstein", "Lithuania", "Luxembourg", "Malta", "Netherlands", "Norway", "Poland", "Portugal", "Romania", "Slovakia", "Slovenia", "Spain", "Sweden", "United Kingdom")
northam <- c("Canada","US")
china <- c("China")
asia_rich <- c("Hong Kong", "Japan", "Singapore", "South Korea", "Taiwan")
df_deaths <- intermediate_df_deaths %>%
mutate (continent=case_when(
Country.Region %in% latam ~ "Latam",
Country.Region %in% eea ~ "EEA",
Country.Region %in% northam ~ "NorthAm",
Country.Region %in% asia_rich ~ "Asia",
Country.Region %in% china ~ "China",
TRUE ~ NA_character_
)
)
#Create proper dates
df_deaths <- df_deaths %>%
mutate (
day = as.numeric(day),
month = case_when(
month_wrong=="X1" ~ 1,
month_wrong=="X2" ~ 2,
month_wrong=="X3" ~ 3,
month_wrong=="X4" ~ 4,
),
year = 2020,
date_interm=interaction(day, month, year, sep = "/"),
date=as.Date(date_interm, format = "%d/%m/%y")
)
df_deaths <- df_deaths %>% select(Province.State, Country.Region, Lat, Long, continent, day, month, year, date, deaths)
#Group by continent
deaths_continent <- df_deaths %>%
group_by(month, day, continent) %>%
summarise(
total = sum(deaths),
)  %>%
filter(total > 0)
#Align by death count
deaths_continent_aligned <- deaths_continent %>%
group_by(continent) %>%
mutate(id = row_number())
#Lets graph
ggplot(data = subset(deaths_continent_aligned,continent %in% c("Latam" , "EEA", "NorthAm")), mapping = aes(x = id, y = total, group = continent, colour = continent)) +
geom_line(size=1.5)+
scale_colour_manual(values = c("#95D840", "#1F968B", "#481567")) +
scale_y_log10() +
theme(panel.background = element_blank(),
legend.position="none",
plot.background = element_rect(fill="#ffffff"),
panel.grid.major = element_line(colour="#eeeeee", size=.5),
panel.grid.minor = element_line(colour="#eeeeee", size=.25),
axis.text = element_text(family = "Helvetica Neue",
color="#999999",
size=20
),
axis.text.x = element_text(margin=margin(5,5,10,5,"pt")),
axis.title = element_text(size = 20,
family="Helvetica Neue",
color="#444444"
),
plot.title = element_text(family = "Helvetica Neue",
color="#444444",
face="bold",
size=35,
hjust=0.25,
margin = margin(b = 30),
),
plot.margin = unit(c(1,1,1,1), "cm")
)
rm(list = ls())
library(tidyverse)
#Extract data -- downloaded from https://github.com/CSSEGISandData/COVID-19
initial_df_deaths <- read.csv("https://github.com/CSSEGISandData/COVID-19/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv", sep=",")
#Transform to long -- you should add manually the last date every day!
intermediate_df_deaths <- initial_df_deaths %>%
pivot_longer(c("X1.22.20","X1.23.20","X1.24.20","X1.25.20","X1.26.20","X1.27.20","X1.28.20","X1.29.20","X1.30.20","X1.31.20","X2.1.20","X2.2.20","X2.3.20","X2.4.20","X2.5.20","X2.6.20","X2.7.20","X2.8.20","X2.9.20","X2.10.20","X2.11.20","X2.12.20","X2.13.20","X2.14.20","X2.15.20","X2.16.20","X2.17.20","X2.18.20","X2.19.20","X2.20.20","X2.21.20","X2.22.20","X2.23.20","X2.24.20","X2.25.20","X2.26.20","X2.27.20","X2.28.20","X2.29.20","X3.1.20","X3.2.20","X3.3.20","X3.4.20","X3.5.20","X3.6.20","X3.7.20","X3.8.20","X3.9.20","X3.10.20","X3.11.20","X3.12.20","X3.13.20","X3.14.20","X3.15.20","X3.16.20","X3.17.20","X3.18.20","X3.19.20","X3.20.20","X3.21.20","X3.22.20","X3.23.20","X3.24.20","X3.25.20","X3.26.20","X3.27.20", "X3.28.20","X3.29.20","X3.30.20","X3.31.20","X4.1.20","X4.2.20","X4.3.20","X4.4.20","X4.5.20","X4.6.20","X4.7.20","X4.8.20","X4.9.20"), names_to = "date", values_to = "deaths")
#Separate for dates
intermediate_df_deaths <- intermediate_df_deaths %>%
separate(date, into = c("month_wrong", "day", "year"))
#Continent dummies
latam <- c("Argentina", "Bolivia", "Brazil", "Chile", "Colombia", "Costa Rica", "Cuba", "Dominican Republic", "Ecuador", "El Salvador", "Guatemala", "Honduras", "Mexico", "Nicaragua", "Panama", "Paraguay", "Peru", "Uruguay", "Venezuela")
eea <- c("Austria","Belgium", "Bulgaria", "Czechia", "Denmark", "Estonia", "Finland", "France", "Germany", "Greece", "Hungary", "Iceland", "Ireland", "Italy", "Latvia", "Liechtenstein", "Lithuania", "Luxembourg", "Malta", "Netherlands", "Norway", "Poland", "Portugal", "Romania", "Slovakia", "Slovenia", "Spain", "Sweden", "United Kingdom")
northam <- c("Canada","US")
china <- c("China")
asia_rich <- c("Hong Kong", "Japan", "Singapore", "South Korea", "Taiwan")
df_deaths <- intermediate_df_deaths %>%
mutate (continent=case_when(
Country.Region %in% latam ~ "Latam",
Country.Region %in% eea ~ "EEA",
Country.Region %in% northam ~ "NorthAm",
Country.Region %in% asia_rich ~ "Asia",
Country.Region %in% china ~ "China",
TRUE ~ NA_character_
)
)
#Create proper dates
df_deaths <- df_deaths %>%
mutate (
day = as.numeric(day),
month = case_when(
month_wrong=="X1" ~ 1,
month_wrong=="X2" ~ 2,
month_wrong=="X3" ~ 3,
month_wrong=="X4" ~ 4,
),
year = 2020,
date_interm=interaction(day, month, year, sep = "/"),
date=as.Date(date_interm, format = "%d/%m/%y")
)
df_deaths <- df_deaths %>% select(Province.State, Country.Region, Lat, Long, continent, day, month, year, date, deaths)
#Group by continent
deaths_continent <- df_deaths %>%
group_by(month, day, continent) %>%
summarise(
total = sum(deaths),
)  %>%
filter(total > 0)
#Align by death count
deaths_continent_aligned <- deaths_continent %>%
group_by(continent) %>%
mutate(id = row_number())
#Lets graph
ggplot(data = subset(deaths_continent_aligned,continent %in% c("Latam" , "EEA", "NorthAm")), mapping = aes(x = id, y = total, group = continent, colour = continent)) +
geom_line(size=1.5)+
scale_colour_manual(values = c("#95D840", "#1F968B", "#481567")) +
scale_y_log10() +
theme(panel.background = element_blank(),
legend.position="none",
plot.background = element_rect(fill="#ffffff"),
panel.grid.major = element_line(colour="#eeeeee", size=.5),
panel.grid.minor = element_line(colour="#eeeeee", size=.25),
axis.text = element_text(family = "Helvetica Neue",
color="#999999",
size=20
),
axis.text.x = element_text(margin=margin(5,5,10,5,"pt")),
axis.title = element_text(size = 20,
family="Helvetica Neue",
color="#444444"
),
plot.title = element_text(family = "Helvetica Neue",
color="#444444",
face="bold",
size=35,
hjust=0.25,
margin = margin(b = 30),
),
plot.margin = unit(c(1,1,1,1), "cm")
)
rm(list = ls())
library(tidyverse)
#Extract data -- downloaded from https://github.com/CSSEGISandData/COVID-19
initial_df_deaths <- read.csv("https://github.com/CSSEGISandData/COVID-19/blob/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv", sep=",")
#Transform to long -- you should add manually the last date every day!
intermediate_df_deaths <- initial_df_deaths %>%
pivot_longer(c("X1.22.20","X1.23.20","X1.24.20","X1.25.20","X1.26.20","X1.27.20","X1.28.20","X1.29.20","X1.30.20","X1.31.20","X2.1.20","X2.2.20","X2.3.20","X2.4.20","X2.5.20","X2.6.20","X2.7.20","X2.8.20","X2.9.20","X2.10.20","X2.11.20","X2.12.20","X2.13.20","X2.14.20","X2.15.20","X2.16.20","X2.17.20","X2.18.20","X2.19.20","X2.20.20","X2.21.20","X2.22.20","X2.23.20","X2.24.20","X2.25.20","X2.26.20","X2.27.20","X2.28.20","X2.29.20","X3.1.20","X3.2.20","X3.3.20","X3.4.20","X3.5.20","X3.6.20","X3.7.20","X3.8.20","X3.9.20","X3.10.20","X3.11.20","X3.12.20","X3.13.20","X3.14.20","X3.15.20","X3.16.20","X3.17.20","X3.18.20","X3.19.20","X3.20.20","X3.21.20","X3.22.20","X3.23.20","X3.24.20","X3.25.20","X3.26.20","X3.27.20", "X3.28.20","X3.29.20","X3.30.20","X3.31.20","X4.1.20","X4.2.20","X4.3.20","X4.4.20","X4.5.20","X4.6.20","X4.7.20","X4.8.20","X4.9.20"), names_to = "date", values_to = "deaths")
#Separate for dates
intermediate_df_deaths <- intermediate_df_deaths %>%
separate(date, into = c("month_wrong", "day", "year"))
#Continent dummies
latam <- c("Argentina", "Bolivia", "Brazil", "Chile", "Colombia", "Costa Rica", "Cuba", "Dominican Republic", "Ecuador", "El Salvador", "Guatemala", "Honduras", "Mexico", "Nicaragua", "Panama", "Paraguay", "Peru", "Uruguay", "Venezuela")
eea <- c("Austria","Belgium", "Bulgaria", "Czechia", "Denmark", "Estonia", "Finland", "France", "Germany", "Greece", "Hungary", "Iceland", "Ireland", "Italy", "Latvia", "Liechtenstein", "Lithuania", "Luxembourg", "Malta", "Netherlands", "Norway", "Poland", "Portugal", "Romania", "Slovakia", "Slovenia", "Spain", "Sweden", "United Kingdom")
northam <- c("Canada","US")
china <- c("China")
asia_rich <- c("Hong Kong", "Japan", "Singapore", "South Korea", "Taiwan")
df_deaths <- intermediate_df_deaths %>%
mutate (continent=case_when(
Country.Region %in% latam ~ "Latam",
Country.Region %in% eea ~ "EEA",
Country.Region %in% northam ~ "NorthAm",
Country.Region %in% asia_rich ~ "Asia",
Country.Region %in% china ~ "China",
TRUE ~ NA_character_
)
)
#Create proper dates
df_deaths <- df_deaths %>%
mutate (
day = as.numeric(day),
month = case_when(
month_wrong=="X1" ~ 1,
month_wrong=="X2" ~ 2,
month_wrong=="X3" ~ 3,
month_wrong=="X4" ~ 4,
),
year = 2020,
date_interm=interaction(day, month, year, sep = "/"),
date=as.Date(date_interm, format = "%d/%m/%y")
)
df_deaths <- df_deaths %>% select(Province.State, Country.Region, Lat, Long, continent, day, month, year, date, deaths)
#Group by continent
deaths_continent <- df_deaths %>%
group_by(month, day, continent) %>%
summarise(
total = sum(deaths),
)  %>%
filter(total > 0)
#Align by death count
deaths_continent_aligned <- deaths_continent %>%
group_by(continent) %>%
mutate(id = row_number())
#Lets graph
ggplot(data = subset(deaths_continent_aligned,continent %in% c("Latam" , "EEA", "NorthAm")), mapping = aes(x = id, y = total, group = continent, colour = continent)) +
geom_line(size=1.5)+
scale_colour_manual(values = c("#95D840", "#1F968B", "#481567")) +
scale_y_log10() +
theme(panel.background = element_blank(),
legend.position="none",
plot.background = element_rect(fill="#ffffff"),
panel.grid.major = element_line(colour="#eeeeee", size=.5),
panel.grid.minor = element_line(colour="#eeeeee", size=.25),
axis.text = element_text(family = "Helvetica Neue",
color="#999999",
size=20
),
axis.text.x = element_text(margin=margin(5,5,10,5,"pt")),
axis.title = element_text(size = 20,
family="Helvetica Neue",
color="#444444"
),
plot.title = element_text(family = "Helvetica Neue",
color="#444444",
face="bold",
size=35,
hjust=0.25,
margin = margin(b = 30),
),
plot.margin = unit(c(1,1,1,1), "cm")
)
View(initial_df_deaths)
rm(list = ls())
